<script>
//center for map when zoomed out
var global_center = {lat: 30.9650874, lng: 1.1948218}
//sets zoom based on if a user is logged in or not
var zoom = <%= logged_in? ? 2 : 12 %>

//create map object
function initMap() {
	map = new google.maps.Map($("#map")[0], {
		zoom: zoom,
		center: global_center,
		mapTypeControl: false,
		panControl: false,
		zoomControl: false,
		streetViewControl: false
	});

  //add autocomplete fucntion to search bar
	autocomplete = new google.maps.places.Autocomplete(
			/** @type {!HTMLInputElement} */ (
			$("#search")[0]), {
				types: ['(cities)']
			});
	autocomplete.addListener('place_changed', onPlaceChanged);

  //drop markers at user locations from db
  <% if @places %>
    <% @places.each do |place| %>
    var service = new google.maps.places.PlacesService(map);
    service.getDetails({
      placeId: "<%= place.placeId %>"
    }, function(place, status) {
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });
      }
    });
    <% end %>
  <% end %>

  //drop infowindow at current user location
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var infoWindow = new google.maps.InfoWindow({map: map});
      var pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };

      var content = "<button>ADD</button>"
      infoWindow.setPosition(pos);
      infoWindow.setContent(content);
      <% if !logged_in? %>
        <%= "map.setCenter(pos);" %>
      <% end %>
    });
  };
};

// When the user selects a city, get the place details for the city and zoom the map in on the city.
function onPlaceChanged() {
	var place = autocomplete.getPlace();
	console.log(place)
  console.log(place.place_id)
	if (place.geometry) {
		map.panTo(place.geometry.location);
		map.setZoom(12);
	} else {
		document.getElementById('search').placeholder = 'SEARCH';
	}

	new google.maps.Marker({
		position:  place.geometry.location,
		animation: google.maps.Animation.DROP,
		map: map
	});
};
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= @api_key %>&callback=initMap&libraries=places" async defer>
</script>
